<h1>About</h1>
<p>W8 配合電腦輔助設計室所建立的 <a href="https://drive.google.com/file/d/1MwUQNWATIgwWoT--HELUHcepNsNi4uTP/view?usp=sharing">portable_hybrid.7z</a> (任何人都可以下載 - 此即 academic portfolio 中的服務) 可攜程式環境系統.</p>
<p><a href="https://drive.google.com/file/d/1MwUQNWATIgwWoT--HELUHcepNsNi4uTP/view?usp=sharing">portable_hybrid.7z</a> 下載檔案約 350MB, 解開壓縮檔案後約為 1GB.</p>
<p style="padding-left: 30px;">註: portable_hybrid.7z 是儲存在 2021fall At mde 的 GDrive 中.</p>
<p><span style="background-color: #ffff99;">是的, 重點在於您希望建立何種樣貌的學習歷程檔案?</span></p>
<p>假如進入大學學習是一段 <a href="https://www.oxfordlearnersdictionaries.com/definition/english/journey_1?q=journey">Journey</a>, 您希望踏上一段什麼樣子的旅程?</p>
<p>是讓人回味無窮? 抑或悔不當初?</p>
<p>何謂 <a href="https://www.oxfordlearnersdictionaries.com/definition/english/academic_1?q=academic">academic</a> <a href="https://www.oxfordlearnersdictionaries.com/definition/english/portfolio">portfolio</a> (學習歷程檔案)?</p>
<p style="padding-left: 30px;">academic 可翻譯為學術的, 而 portfolio 指的是文件檔案夾, 可以引申為資料或檔案的組合, 假如又將這些資料的創建時間納入, 也可以將 portfolio 稱為歷程檔案組合, 所以 academic portfolio 就被翻譯為學術歷程檔案, 或學習歷程檔案, 在此 <span style="background-color: #ccffcc;">academic portofolio 特稱為大學時期與學習有關的歷程檔案組合</span>.</p>
<p style="padding-left: 30px;">academic portfolio 內容就是專業核心課程學習歷程的綜合呈現, 未來無論是求職或研究所推甄, 學習歷程檔案就是可用來評量申請者是否符合過關要求的重要指標.</p>
<p style="padding-left: 30px;"><a href="https://www.uts.edu.au/research-and-teaching/learning-and-teaching/scholarship-and-research/scholarship-learning-and-teaching/developing-academic-portfolio">https://www.uts.edu.au/research-and-teaching/learning-and-teaching/scholarship-and-research/scholarship-learning-and-teaching/developing-academic-portfolio</a></p>
<p style="padding-left: 60px;">A portfolio supports you in your role as an academic by creating a record of your reflection (反思), development (開發, 拓展) and achievements (成果, 成就) over time. You may like to use aspects (面向) of your portfolio to provide evidence (證據) for formal probation (試用期) review, progression (進展) or promotion (升職) processes.</p>
<p style="padding-left: 30px;"><a href="https://www.hr.uwa.edu.au/working/academic/portfolio">https://www.hr.uwa.edu.au/working/academic/portfolio</a></p>
<p style="padding-left: 60px;">An Academic Portfolio is a summary of your major activities and accomplishments (成果), documenting the nature and extent of your contributions (貢獻) as well as your role and achievements. It has three major components (or folios), supported by your Curriculum Vitae (CV).</p>
<p style="padding-left: 60px;">這裡指的三項學術歷程檔案, 就是國內在評量大學老師的所謂教學 (包括教課與學習), 研究 (research) 與服務等三項工作內容的組合.</p>
<p style="padding-left: 60px;">教學 - 課程內容有沒有與時俱進, 逐步提升內容與教學方法, 以符合時代要求.</p>
<p style="padding-left: 60px;">研究 - 對於所開設的課程或與業界相關的研究主題, 是否持續鑽研探究.</p>
<p style="padding-left: 60px;">服務 - 是否將教學與研究成果, 實際提供給公眾使用.</p>
<p style="padding-left: 30px;"><a href="https://www.utu.fi/en/university/come-work-with-us/academic-portfolio">https://www.utu.fi/en/university/come-work-with-us/academic-portfolio</a></p>
<p style="padding-left: 60px;">A good portfolio is comprehensive ((範圍)全面), brief ((內容)簡短), and concise. ((用詞)簡潔) The recommended maximum length of the academic portfolios used in filling the teaching vacancies at the University is five pages. Faculties may give more detailed information about the quality and quantity of appendixes.<br/><br/>Portfolios are created for a variety of purposes, the most important situation being recruitment (招募人才). Portfolio is also an excellent way for members of personnel to cultivate their expertise (培養專業知識), and it can also be used in development discussions and when building the work unit’s job description.</p>
<p style="padding-left: 30px;"><a href="https://www.huronconsultinggroup.com/insights/academic-portfolio-data-collaboration-teach">https://www.huronconsultinggroup.com/insights/academic-portfolio-data-collaboration-teach</a></p>
<p style="padding-left: 60px;">Successfully managing an academic portfolio requires continued (持續) collaboration (協同) and use of data. There are many stakeholders involved in the process and emphasizing the importance of collaboration will not only assist portfolio management, but also an institution’s mission (使命) and vision (願景). Institutional and academic leaders can align conversations about strategic activities and information management to strengthen long-range academic planning.<br/><br/>Additionally, as leaders review program-level costs and data as a part of academic portfolio management, they will be able to identify opportunities to reallocate funding to support resource-intensive academic programs. Better access to this data will also increase visibility on learning, progression and graduation outcomes. As the relationships and collaboration between academic leadership and faculty strengthen, decision making (決策), resource allocation (資源配置) and data analysis will improve.</p>
<p>這是計算機程式課程 2021 Fall 的作業倉儲與網站 template</p>
<hr/>
<p>demo 學號與帳號: mdecourse</p>
<p>網站倉儲: <a href="https://github.com/Tzm0306/cp2021_hw">https://github.com/Tzm0306/cp2021_hw</a> </p>
<p><a href="https://github.com/mdecourse/cp2021_hw"></a>網站連結: <a href="https://tzm0306.github.io/cp2021_hw/">https://tzm0306.github.io/cp2021_hw/</a></p>
<p>其他與個人或作業相關資料說明或介紹:</p>
<p>mdecourse 所屬的實驗室: <a href="https://mde.tw">https://mde.tw</a></p>
<h2>portable_hybrid</h2>
<p>W8 配合電腦輔助設計室所建立的 <a href="https://drive.google.com/file/d/1MwUQNWATIgwWoT--HELUHcepNsNi4uTP/view?usp=sharing">portable_hybrid.7z</a> (任何人都可以下載 - 此即 academic portfolio 中的服務) 可攜程式環境系統.</p>
<p style="padding-left: 30px;">註: portable_hybrid.7z 是儲存在 2021fall At mde 的 GDrive 中.</p>
<p><a href="https://drive.google.com/file/d/1MwUQNWATIgwWoT--HELUHcepNsNi4uTP/view?usp=sharing">portable_hybrid.7z</a> 下載檔案約 350MB, 解開壓縮檔案後約為 1GB.</p>
<p>此一版本並未包含 <a href="https://www.fossil-scm.org">https://www.fossil-scm.org</a>, 當各組建立 Fossil SCM server 時必須自行在 Windows 與 Ubuntu 操作系統中下載當時最新的 Fossil SCM 版本.</p>
<h4>portable_hybrid 可攜程式系統介紹:</h4>
<p style="padding-left: 30px;">此版本是配合電腦輔助設計室 2021 年 Fall 更新電腦後所製作, 其中的 start_hybrid_ipv4.bat 與 start_hybrid_ipv6.bat可以使用電腦 C 槽 SSD 中的 C:\2021_cadlab_portable\data\Python395 與 C:\2021_cadlab_portable\data\portablegit_2.31.1, 取得較快的執行速度.</p>
<p style="padding-left: 30px;">但也同時在 portable_hybrid\data 目錄中自帶這兩個目錄檔案, 因此也可以透過 start_ipv4.bat 與 start_ipv6.bat 使用隨身碟中的 Python 與 Git.</p>
<p style="padding-left: 30px;">支援程式語言: Python 3.9.5 與 ANSI C (<a href="https://bellard.org/tcc/">Tiny C Compiler</a>).</p>
<p style="padding-left: 30px;">提供 GitExtensions, Sharex, kdiff3, Zoomit, ProcessExplorer, ProcessMonitor, Wink, Solvespae 等工具.</p>
<h2>GitExtensions</h2>
<p><a href="https://github.com/mdecourse/cad2021/files/7517136/GitExtensions_hybrid.zip">下載尚未個人化設定的 GitExtensions</a></p>
<p>利用 GitExtensions 輸入提交訊息時, 若出現字串 highlight 表示提交字串可能不會被 Github 接受, 導致 <a href="https://github.com/mdecourse/cad2021_hw/commit/fafa93e9925892354f02996006a965bbd2b4a56e">Github Pages 轉檔錯誤</a>, 網頁將無法正常連線. 修正錯誤後, 以正確的提交字串 push, 可以得到正確的<a href="https://github.com/mdecourse/cad2021_hw/commit/09d98e1dfc4a0cfda2edae530efb5e08ac1f47ba">轉檔結果</a>.</p>
<p>GitExtensions 設定:</p>
<p><img alt="" height="486" src="https://mde.tw/cad2021_hw/images/GitExtensions_Paths_setup.png" width="600"/></p>
<p>GitExtensions Git config setup:</p>
<p><img alt="" height="486" src="https://mde.tw/cad2021_hw/images/GitExtensions_Git_config.png" width="600"/></p>
<p>以下將請已經完成 GitExtensions 與 SSH 結合使用的學員製作"GitExtensions 導引" Wink, 說明詳細的設定流程.</p>
<h2>runsrc</h2>
<h4>run 頁面在動態網頁的 html:</h4>
<p><a href="/downloads/run.txt">run.txt</a></p>
<p></p>
<h2>Snake</h2>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><canvas height="400" id="game-board" width="400"></canvas></p>
<h4 class="text-center" id="score">Score: 0</h4>
<p></p>
<h6 class="text-center" id="high-score">High Score: 0</h6>
<p></p>
<div class="text-center"><button class="btn btn-info" id="instructions-btn">Instructions</button></div>
<p>
<script type="text/python">
from browser import document, html, window
import random

score = 0
high_score = 0

px = py = 10
gs = tc = 20
ax = ay = 15
xv = yv = 0
trail = []
tail = 5

pre_pause = [0,0]
paused = False

def game():
    global px, py, tc, gs, ax, ay, trail, tail, score
    px += xv
    py += yv
    if px < 0:
        px = tc-1
    if px > tc-1:
        px = 0
    if py < 0:
        py = tc-1
    if py > tc-1:
        py = 0
    ctx.fillStyle = "black"
    ctx.fillRect(0, 0, canvas.width, canvas.height)
    ctx.fillStyle = "lime"
    for i in range(len(trail)):
        ctx.fillRect(trail[i][0]*gs, trail[i][1]*gs, gs-2, gs-2)
        if trail[i][0] == px and trail[i][1] == py:
            score = score if paused else 0
            tail = tail if paused else 5
    trail.insert(0, [px, py])
    while len(trail) > tail:
        trail.pop()

    if ax == px and ay == py:
        tail += 1
        ax = int(random.random()*tc)
        ay = int(random.random()*tc)
        score += 1
    update_score(score)
    ctx.fillStyle = "red"
    ctx.fillRect(ax*gs, ay*gs, gs-2, gs-2)

def update_score(new_score):
    global high_score
    document["score"].innerHTML = "Score: " + str(new_score)
    if new_score > high_score:
        document["high-score"].innerHTML = "High Score: " + str(new_score)
        high_score = new_score

def key_push(evt):
    global xv, yv, pre_pause, paused
    key = evt.keyCode
    if key == 37 and not paused:
        xv = -1
        yv = 0
    elif key == 38 and not paused:
        xv = 0
        yv = -1
    elif key == 39 and not paused:
        xv = 1
        yv = 0
    elif key == 40 and not paused:
        xv = 0
        yv = 1
    elif key == 32:
        temp = [xv, yv]
        xv = pre_pause[0]
        yv = pre_pause[1]
        pre_pause = [*temp]
        paused = not paused

def show_instructions(evt):
    window.alert("Use the arrow keys to move and press spacebar to pause the game.")

canvas = document["game-board"]
ctx = canvas.getContext("2d")
document.addEventListener("keydown", key_push)
game_loop = window.setInterval(game, 1000/15)
instructions_btn = document["instructions-btn"]
instructions_btn.addEventListener("click", show_instructions)
</script>
</p>
<h2>SSH</h2>
<p>putty</p>
<h2>Network</h2>
<p>當電腦輔助設計室中, 將連外網路由 NAT 轉為直接連到 Backbone 後, 可能因為電腦中所安裝的套件問題, 會因直接網路連外, 導致外部電腦試圖透過 ARP 快取進行破壞攻擊, 因此必須設法中止此一攻擊, 並且能利用 IPv6 網路協定上網.</p>
<p><img alt="" height="275" src="/images/cadlab_network_problem.png" width="400"/></p>
<p>面對此一網路威脅的處理方法, 就是在純 IPv6 網路協定下, 讓電腦中所安裝的潛在問題套件無法透過系統的 Proxy 設定連網:</p>
<ol>
<li>關閉 Windows 操作系統的網路代理主機設定</li>
<li>關閉 IPv4 網路協定</li>
<li>設定 IPv6 的 DNS 伺服器, 2001:b000:168::1</li>
<li>針對瀏覽器與 git 客戶端, 分別設定能從純 IPv6 轉往只支援 IPv4 網路協定的代理主機.</li>
</ol>
<p>git 的網路代理主機設定 git config --global http.proxy <a href="http://[Proxy_ip_address]:3128">http://[Proxy_ip_address]:3128</a></p>
<h4>Computer Networks:</h4>
<p style="padding-left: 30px;">相關開放電子書: <a href="http://intronetworks.cs.luc.edu/current1/html/">http://intronetworks.cs.luc.edu/current1/html/</a></p>
<p style="padding-left: 60px;">其他格式: <a href="https://open.umn.edu/opentextbooks/textbooks/an-introduction-to-computer-networks">https://open.umn.edu/opentextbooks/textbooks/an-introduction-to-computer-networks</a></p>
<h1>HW1</h1>
<p></p>
<p></p>
<h2>HW1-1</h2>
<p>第一種在網頁執行 Brython 程式的方法, 是使用者在網際程式編輯區輸入 Brython 程式碼, 必須手動按下 Run 才能執行.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/Tzm0306/e66a0f2b687fe604f121f6ebd01afd01/raw/d25cdab6fa0bc93f4f6abe48a60ed0ddc22f46fa/version"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    #Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<p></p>
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 執行與清除按鈕結束 -->
<p></p>
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 -->
<div id="brython_div"></div>
<!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script><h2>HW1-2</h2>
<p>第一種在網頁執行 Brython 程式的方法, 是使用者在網際程式編輯區輸入 Brython 程式碼, 必須手動按下 Run 才能執行.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/Tzm0306/cf96f2fe59f3b256ceb1459251ef7b21/raw/6894c8fb8db060e2e936feaf61a2bd9fd9429771/gistfile1.txt"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    #Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<p></p>
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 執行與清除按鈕結束 -->
<p></p>
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 -->
<div id="brython_div"></div>
<!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script><h1>HW2</h1>
<p>在電腦輔助設計的新電腦上可以利用 USB 隨身碟設定所謂 Hybrid 可攜程式系統, 也就是 Python 與 Portablegit 使用 c:\2021_portable_kmol\data 目錄中的檔案, 而將 start_ipv4.bat, start_ipv6.bat, data, wscite, tmp 等目錄放在 USB 隨身碟.</p>
<p>在電腦輔助設計室中, 以 USB 隨身碟啟動的 start_ipv4.bat 檔案內容: <a href="/downloads/start_ipv4_hybrid.txt">start_ipv4_hybrid.txt</a></p>
<p>在動態系統中加入 run 頁面的 html 原始碼: <a href="https://mde.tw/cp2021_hw/downloads/run.txt">run.txt</a></p>
<p>當你建立 Github 帳號後就可以利用 Gist 儲存資料或程式碼, 且可以利用 <a href="https://mde.tw/cp2021/content/run.html">https://mde.tw/cp2021/content/run.html</a> 來執行 Brython 程式.</p>
<p>在 <a href="https://mde.tw/cp2021/content/run.html">run.html</a> 執行 Brython 程式, 可以使用下列三種方法:</p>
<ol>
<li>直接連線至 <a href="https://mde.tw/cp2021/content/run.html">https://mde.tw/cp2021/content/run.html</a> 將 Brython 程式寫在編輯區, 然後按下 Run.</li>
<li>將 Brython 程式存在 Gist, 利用 run.html?src=Gist_URL, <a href="https://mde.tw/cp2021/content/run.html">run.html</a> 中的 Javascript 就會導入此 Gist 程式執行.</li>
<li>將 Brython 程式寫在 <a href="https://mde.tw/cp2021/content/run.html">run.html</a> 頁面 html 超文件中, 然後安排其中的 Javascript 或 Brython 程式導入執行.</li>
</ol>
<p>建立可攜程式系統時必須了解 start_ipv4.bat 或 start_ipv6.bat 中的所有指令用法:</p>
<p>以電腦輔助設計室中使用新電腦的 USB 可攜 Hybrid 設定 start_ipv4.bat 為例.</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
subst %Disk%: "data"

set Local=C:\2021_cadlab_portable\data

%Disk%:

set HomePath=%Disk%:\home_ipv4
set HomeDrive=%Disk%:\home_ipv4
set Home=%Disk%:\home_ipv4
set USERPROFILE=%Disk%:\home_ipv4

REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"

set PYTHONPATH=%Local%\Python395\DLLs;%Local%\Python395\Lib;%Local%\Python395\Lib\site-packages;

set PYTHONHOME=%Local%\Python395

REM 使用 putty 設定 git ssh 連線
set GIT_SSH=%Disk%:\putty\plink.exe

REM 設定跟 Python 有關的命令搜尋路徑
set path_python=%Local%\Python395;%Local%\Python395\Scripts;
set path_portablegit=%Local%\portablegit_2.31.1\bin;

path=%Disk%:;%path_python%;%path_portablegit%;%path%;

REM ref: https://drive.google.com/file/d/1S0XYN-1MKxo0KFYxs0pFTcTrr8NL4n1b/view

REM REGEDIT.EXE /S %Disk%:\putty_github_com.reg;

start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe

start /MIN %Disk%:\wScite\SciTE.exe
start /MIN %Disk%:\wScite\SciTE.exe

Exit</pre>
<p>因為電腦 C:\ 中存放的可攜系統位於 C:\2021_cadlab_portable\data, 因此將此路徑設為 Local 變數, 然後與 Python 即 Portablegit 有關的路徑都使用 %Local% 變數設定.</p>
<p>有關 SSH push 設定必須將 putty 系統登錄檔案匯出後, 在啟動隨身系統時載入所需設定. <a href="https://drive.google.com/file/d/1S0XYN-1MKxo0KFYxs0pFTcTrr8NL4n1b/view">putty 設定登錄檔案匯出與匯入說明影片</a>.</p>
<p>Windows 指令:</p>
<p style="padding-left: 30px;"><a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/echo">echo off</a>, 而放在前面的 <a href="https://stackoverflow.com/questions/8486042/what-does-mean-in-windows-batch-scripts">@ 指令說明</a>.</p>
<p style="padding-left: 30px;"><a href="https://en.wikipedia.org/wiki/List_of_DOS_commands#SET">set</a>: 設定<a href="https://ss64.com/nt/syntax-variables.html">環境變數</a>.</p>
<p style="padding-left: 30px;">HomePath, HomeDrive, Home, USERPROFILE 都屬於 Windows 操作系統的<a href="https://ss64.com/nt/syntax-variables.html">環境變數</a>.</p>
<p><a href="https://mde.tw/cp2021_hw/content/run.html?src=https://gist.githubusercontent.com/mdecourse/3db55f124185def5aac8e5d51579c484/raw/cc346e5ed77c63051ea69c985b191d8bd3afc1fc/red_rect1.py">HW1-1</a>: 將左右碰撞移動的紅色方塊, 改為先移動到水平畫面中心點位置後, 接著上下碰撞移動.</p>
<p><a href="https://mde.tw/cp2021_hw/content/run.html?src=https://gist.githubusercontent.com/mdecourse/3db55f124185def5aac8e5d51579c484/raw/cc346e5ed77c63051ea69c985b191d8bd3afc1fc/red_rect2_with_start_button.py">HW1-2</a>: 加入與 <a href="https://mde.tw/cp2021/content/Cango.html">Cango 頁面</a> Fourbar 程式碼相同功能的啟動按鈕, 讓使用者可以利用按鈕啟動或中斷紅色方塊上下碰撞移動. 完成後請將程式碼存入個人 Gist 區.</p>
<hr/>
<p>HW2 - 可攜程式系統與個人網站佔學期成績 20%.</p>
<p><span style="background-color: #ffff99;">HW2 必須在 2021.11.03 22:00 之前完成.</span></p>
<p><a href="https://github.com/mdecourse/cp2021/discussions/9">HW2 具體項目成果回報區</a>將於 2021.10.25 開啟, 於 <span style="background-color: #ff99cc;">2021.11.03 22:00 關閉</span></p>
<p>可攜程式系統與 Python 範例程式收集整理</p>
<p>1. 請準備一個至少 64 GB 大小的 USB 3.0 以上隨身碟 (或外接 SSD), 根據 <a href="https://mde.tw/cp2021/content/Task2.html">Task2</a> 中的說明, 建立自己的可攜程式系統. </p>
<p>2. 請登入 Github 帳號後, 連線至 <a href="https://github.com/mdecourse/cp2021_hw">https://github.com/mdecourse/cp2021_hw</a> 後, 透過 <span style="background-color: #00ff00;">Use this template</span> 按鈕建立自己的 cp2021_hw 倉儲. 並至該倉儲的 Settings -&gt; Pages -&gt; Source 將 main 分支設為 Github Pages 的 root (也就是選擇將倉儲的 main 分支設為對應網站的根目錄).</p>
<p>3. 請將 HW1 與 HW2 的作業內容登錄至個人的 cp2021_hw 倉儲與網站中. (學習如何透過 git 指令修改倉儲中的版本內容)</p>
<p>4. 請在個人作業網站的 HW2 區域下增設一個 H2 頁面, 將該網頁標題命名為 run, 可以如 <a href="https://mde.tw/cp2021/content/run.html">run</a> 頁面中的內容, 並且利用此頁面收集 Python 範例程式. (例如: 可自動執行的貪食蛇: <a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/2160a12b9fec9707a120a383ed5d38b9b78a02cf/snake.py">https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/2160a12b9fec9707a120a383ed5d38b9b78a02cf/snake.py</a> 將 <a href="https://gist.github.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439">https://gist.github.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439</a> 作為 <a href="https://mde.tw/cp2021/content/run.html">https://mde.tw/cp2021/content/run.html</a> 頁面中 src 變數的值, 就可以在頁面中導入程式碼並執行)</p>
<h2>run</h2>
<p>第一種在網頁執行 Brython 程式的方法, 是使用者在網際程式編輯區輸入 Brython 程式碼, 必須手動按下 Run 才能執行.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/f188098281ecaeedeea484c074ab34a05c3086eb/snake.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    #Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<p></p>
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 執行與清除按鈕結束 -->
<p></p>
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 -->
<div id="brython_div"></div>
<!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
<h1>Server</h1>
<p>在電腦輔助設計室中的 11 台舊電腦, 因為第三磁區並沒有保護, 因此可以設定為 Flask 與 Fossil SCM server 主機.</p>
<p>六台新電腦中的一台可以透過 <a href="https://support.microsoft.com/zh-tw/windows/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E9%81%A0%E7%AB%AF%E6%A1%8C%E9%9D%A2-5fe128d5-8fb1-7a23-3b8a-41e636865e8c">remote desktop</a> 連線至各分組的伺服器進行設定.</p>
<p>至於在 Windows 10 中可以利用 <a href="https://nssm.cc/">https://nssm.cc/</a> 將應用程式設為 service.</p>
<h4>Windows 10 中的動態課程網頁系統:</h4>
<h4 style="padding-left: 30px;">以 waitress 執行 cmsimde/wsgi.py:</h4>
<p style="padding-left: 60px;">python -m pip install waitress</p>
<p>建立一個 waitress_server.py:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 執行前, 必須要先利用 python -m pip install waitress 安裝 wairess 模組
# 接著從 waitress 導入 serve
from waitress import serve
 
# 導入 flaskapp
"""
在不將 cmsimde 目錄納入 sys.path 搜尋路徑時, 
可以複製一份 cmsimde/nocache.py 至倉儲目錄. 
或者將 cmsimde 納入系統搜尋路徑中, 
且必須放在導入 flaskapp  之前
"""
import sys
sys.path.append("./cmsimde")
from cmsimde import flaskapp
 
# run flaskapp.app with production waitress
serve(flaskapp.app, host='0.0.0.0', port=5000, url_scheme='https')</pre>
<p>接著先除去 url_scheme='https' 後以 python waitress_server.py 執行. cmsimde 主機將可透過瀏覽器連結 <a href="http://server_ip:5000">http://server_ip:5000</a></p>
<p>接下來則可以利用 <a href="https://www.stunnel.org/">Stunnel</a> 作為 https 代理主機, 作為 <a href="http://server_ip:5000">http://server_ip:5000</a> 與外部瀏覽器連接的代理轉接者.</p>
<h4>stunnel.conf 設定內容:</h4>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">[https]
accept = 8443
connect = 5000
cert = fullchain.pem
key = privkey.pem
TIMEOUTclose = 0</pre>
<p>cmsimde 系統的靜態網頁則可以利用 <a href="https://nginx.org/">Nginx</a> 伺服.</p>
<p>Nginx 在 Ubuntu /etc/nginx/sites-available/default 中的設定:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">server {
    listen 80;
    listen [::]:80;
    root /home/wcm2021/newcms;
    index index.html;
   
    location /static {
        alias /home/wcm2021/newcms/cmsimde/static/;
    }
   
    location /downloads {
        alias /home/wcm2021/newcms/downloads/;
    }
   
    location /images {
        alias /home/wcm2021/newcms/images/;
    }
   
    location / {
            try_files $uri $uri/ =404;
    } 
       
    location /blog {
        alias /home/wcm2021/cmsimfly/blog/;
    }
   
    location /reveal {
        alias /home/wcm2021/cmsimfly/reveal/;
    }
}
   
server {
    listen 443 ssl;
    #listen [::]:443 ssl ipv6only=on;
    
    location /static {
        alias /home/wcm2021/cmsimfly/static/;
    }
    
    location / {
        include uwsgi_params;
        uwsgi_pass  127.0.0.1:8080;
    }
    
    #server_name ipv4_ip; 
    #ssl on;
    ssl_certificate /etc/stunnel/localhost.crt;
    ssl_certificate_key /etc/stunnel/localhost.key;
    ssl_session_timeout 5m;
    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;
    try_files $uri $uri/ =404;
}
    
server {
    #listen 89 default_server;
    #listen [::]:89 default_server ipv6only=on;
    
    listen 8943 ssl;
    #listen [::]:8943 ssl ipv6only=on;
    
    location /static {
        alias /home/wcm2021/cmsimfly2/static/;
    }
    
    location / {
        include uwsgi_params;
        uwsgi_pass  127.0.0.1:8082;
    }
    
    #server_name ipv4_ip;
    #ssl on;
    ssl_certificate /etc/stunnel/localhost.crt;
    ssl_certificate_key /etc/stunnel/localhost.key;
    ssl_session_timeout 5m;
    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;
    try_files $uri $uri/ =404;
}
   
server {
    #listen 88 default_server;
    #listen [::]:88 default_server ipv6only=on;
    
    listen 8843 ssl;
    #listen [::]:8843 ssl ipv6only=on;
    
    location /static {
        alias /home/wcm2021/newcms/cmsimde/static/;
    }
    
    location / {
        include uwsgi_params;
        uwsgi_pass  127.0.0.1:8081;
    }
    
    #server_name ipv4_ip;
    #ssl on;
    ssl_certificate /etc/stunnel/localhost.crt;
    ssl_certificate_key /etc/stunnel/localhost.key;
    ssl_session_timeout 5m;
    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;
    try_files $uri $uri/ =404;
}</pre>
<p></p>
<h1>HW3</h1>
<p></p>
<p>HW3 - AI 貪食蛇佔學期成績 30%.</p>
<p><span style="background-color: #ffff99;">HW3 必須在 2021.12.22 22:00 之前完成.</span></p>
<p><a href="https://github.com/mdecourse/cp2021/discussions/10">HW3 具體項目成果回報區</a>將於 2021.11.09 開啟, 於 <span style="background-color: #ff99cc;">2021.12.22 22:00 關閉</span></p>
<p>網際貪食蛇的逆襲, 誰的<a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/2160a12b9fec9707a120a383ed5d38b9b78a02cf/snake.py">自動執行貪食蛇</a>能夠破紀錄? 目前直覺貪食蛇紀錄為 45 節 (除了蛇身節數外, 應該還要置入出現紅色標的物後的總完食時間).</p>
<p><a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/f188098281ecaeedeea484c074ab34a05c3086eb/manual_snake.py">手動執行貪食蛇</a>程式說明與整理.</p>
<p><a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/2160a12b9fec9707a120a383ed5d38b9b78a02cf/snake.py">自動執行貪食蛇</a>程式說明與整理.</p>
<p><a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/2160a12b9fec9707a120a383ed5d38b9b78a02cf/snake.py">自動執行貪食蛇</a>程式的改進.</p>
<h4>參考資料:</h4>
<p style="padding-left: 30px;">文獻探討: <a href="https://towardsdatascience.com/training-a-snake-game-ai-a-literature-review-1cdddcd1862f">https://towardsdatascience.com/training-a-snake-game-ai-a-literature-review-1cdddcd1862f</a></p>
<p style="padding-left: 30px;"><a href="https://super9.space/archives/1562">以 Python 實作演算法</a></p>
<p style="padding-left: 30px;"><a href="/downloads/ai_snake_in_python.pdf">ai_snake_in_python.pdf</a> (<a href="https://hawstein.com/2013/04/15/snake-ai/">https://hawstein.com/2013/04/15/snake-ai/</a>, <a href="https://github.com/mdecourse/snake-ai">https://github.com/mdecourse/snake-ai</a>)</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff99;"><a href="https://github.com/mdecourse/python-game-snake" style="background-color: #ffff99;">https://github.com/mdecourse/python-game-snake</a></span></p>
<p style="padding-left: 30px;"><span style="background-color: #ffff99;"><a href="https://www.geeksforgeeks.org/ai-driven-snake-game-using-deep-q-learning/">https://www.geeksforgeeks.org/ai-driven-snake-game-using-deep-q-learning/</a> <br/></span></p>
<p style="padding-left: 30px;"><span style="background-color: #ffff99;"><a href="https://craighaber.github.io/AI-for-Snake-Game/website_files/index.html">https://craighaber.github.io/AI-for-Snake-Game/website_files/index.html</a> <br/></span></p>
<p style="padding-left: 30px;"><span style="background-color: #ffff99;"><a href="https://www.python-course.eu/snake_in_python.php">https://www.python-course.eu/snake_in_python.php</a> <br/></span></p>
<p style="padding-left: 30px;"><span style="background-color: #ffff99;">https://techitsmart.ca/2020/05/18/teaching-ai-to-play-snake-using-python/</span></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cp2021/content/Task3.html">https://mde.tw/cp2021/content/Task3.html</a></p>
<p style="padding-left: 30px;">Brython snake 原始來源: <a href="https://medium.com/swlh/sick-of-javascript-just-use-browser-python-4b9679efe08b">https://medium.com/swlh/sick-of-javascript-just-use-browser-python-4b9679efe08b</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/snake-Q-Learning">https://github.com/mdecourse/snake-Q-Learning</a></p>
<p style="padding-left: 30px;"><a href="https://towardsdatascience.com/teaching-a-computer-how-to-play-snake-with-q-learning-93d0a316ddc0">https://towardsdatascience.com/teaching-a-computer-how-to-play-snake-with-q-learning-93d0a316ddc0</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/SnakeQlearning">https://github.com/mdecourse/SnakeQlearning</a></p>
<p style="padding-left: 30px;"><a href="https://medium.com/@italohdc/learnsnake-teaching-an-ai-to-play-snake-using-reinforcement-learning-q-learning-b63ac23dfdd1">https://medium.com/@italohdc/learnsnake-teaching-an-ai-to-play-snake-using-reinforcement-learning-q-learning-b63ac23dfdd1</a></p>
<p style="padding-left: 30px;"><a href="https://towardsdatascience.com/snake-played-by-a-deep-reinforcement-learning-agent-53f2c4331d36">https://towardsdatascience.com/snake-played-by-a-deep-reinforcement-learning-agent-53f2c4331d36</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/ai-driven-snake-game-using-deep-q-learning/">https://www.geeksforgeeks.org/ai-driven-snake-game-using-deep-q-learning/</a></p>
<p style="padding-left: 30px;"><a href="https://www3.hs-albsig.de/wordpress/point2pointmotion/2020/10/09/deep-reinforcement-learning-with-the-snake-game/">https://www3.hs-albsig.de/wordpress/point2pointmotion/2020/10/09/deep-reinforcement-learning-with-the-snake-game/</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2016_Exploration of Reinforcement Learning to SNAKE.pdf">2016_Exploration of Reinforcement Learning to SNAKE.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/train_a_snake_with_reinforceme.pdf">train_a_snake_with_reinforceme.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://medium.com/@hugo.sjoberg88/using-reinforcement-learning-and-q-learning-to-play-snake-28423dd49e9b">https://medium.com/@hugo.sjoberg88/using-reinforcement-learning-and-q-learning-to-play-snake-28423dd49e9b</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/Snake-Reinforcement-Learning">https://github.com/mdecourse/Snake-Reinforcement-Learning</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Autonomous-Agents-in-Snake-Game-via-Deep-Reinforcement-Learning.pdf">Autonomous-Agents-in-Snake-Game-via-Deep-Reinforcement-Learning.pdf</a></p>
<h4>延伸應用:</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/PJl4iabBEz0" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/5Vy5Dxu7vDs" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/6pJBPPrDO40" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/VGkcmBaeAGM" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://github.com/mdecourse/snake-ai-pytorch">https://github.com/mdecourse/snake-ai-pytorch</a></p>
<h2>Algorithms</h2>
<p>演算法 - <a href="https://web.ntnu.edu.tw/~algo/Algorithm.html">https://web.ntnu.edu.tw/~algo/Algorithm.html</a></p>
<p><a href="/downloads/data_structure_in_python.pdf">Data Structure in Python.pdf</a></p>
<p><a href="/downloads/data_structure_and_algorithm_in_CPP.pdf">Data Structure and Algorithm in Cpp.pdf</a></p>
<p><a href="/downloads/Algorithms.pdf">Algorithm.pdf</a></p>
<p><a href="https://introcs.cs.princeton.edu/python/40algorithms/">https://introcs.cs.princeton.edu/python/40algorithms/</a></p>
<p><a href="https://visualgo.net/en">VisualGo</a> (Visualization of Algorithm)</p>
<p><a href="/downloads/Principles of Algorithmic Problem Solving.pdf">Principles of Algorithmic Problem Solving.pdf</a></p>
<p>Foundation of Computer Science: <a href="http://infolab.stanford.edu/~ullman/focs.html">http://infolab.stanford.edu/~ullman/focs.html</a></p>
<p><a href="/downloads/open_data_structures.pdf">Open Data Structures.pdf</a></p>
<p>Free Programming books: <a href="https://ebookfoundation.github.io/free-programming-books/">https://ebookfoundation.github.io/free-programming-books/</a></p>
<p><a href="https://towardsdatascience.com/data-structures-algorithms-in-python-68c8dbb19c90">Python 的資料結構與演算法</a> (<a href="https://jovian.ai/learn/data-structures-and-algorithms-in-python">線上課程</a>)</p>
<p><a href="https://www.louisbourque.ca/AI-Snake-Game/">https://www.louisbourque.ca/AI-Snake-Game/</a></p>
<p><a href="https://hawstein.com/2013/04/15/snake-ai/">https://hawstein.com/2013/04/15/snake-ai/</a></p>
<p><a href="https://en.wikipedia.org/wiki/Depth-first_search">https://en.wikipedia.org/wiki/Depth-first_search</a></p>
<p><a href="https://favtutor.com/blogs/depth-first-search-python">https://favtutor.com/blogs/depth-first-search-python</a></p>
<p><a href="https://github.com/mdecourse/snake_pathfinding_ai">https://github.com/mdecourse/snake_pathfinding_ai</a></p>
<p><a href="https://super9.space/archives/1562">https://super9.space/archives/1562</a></p>
<p><a href="https://reposhub.com/python/game-development/memoiry-Snaky.html">https://reposhub.com/python/game-development/memoiry-Snaky.html</a></p>
<p><a href="https://github.com/mdecourse/python-game-snake">https://github.com/mdecourse/python-game-snake</a></p>
<p><a href="https://www.geeksforgeeks.org/ai-driven-snake-game-using-deep-q-learning/">https://www.geeksforgeeks.org/ai-driven-snake-game-using-deep-q-learning/</a></p>
<p><a href="https://craighaber.github.io/AI-for-Snake-Game/website_files/index.html">https://craighaber.github.io/AI-for-Snake-Game/website_files/index.html</a></p>
<p><a href="https://www.python-course.eu/snake_in_python.php">https://www.python-course.eu/snake_in_python.php</a></p>
<p><a href="https://techitsmart.ca/2020/05/18/teaching-ai-to-play-snake-using-python/">https://techitsmart.ca/2020/05/18/teaching-ai-to-play-snake-using-python/</a></p>
<p><a href="https://www.geeksforgeeks.org/snake-ladder-problem-2/">https://www.geeksforgeeks.org/snake-ladder-problem-2/</a> <span style="background-color: #ffff99;"><br/></span></p>
<h4>資料結構:</h4>
<p style="padding-left: 30px;"><a href="https://www.aupress.ca/books/120226-open-data-structures/">https://www.aupress.ca/books/120226-open-data-structures/</a></p>
<h2>ML in Brython</h2>
<p><a href="https://www.analyticsvidhya.com/blog/2021/07/python-on-frontend-ml-models-web-interface-with-brython/">https://www.analyticsvidhya.com/blog/2021/07/python-on-frontend-ml-models-web-interface-with-brython/</a></p>
<p><a href="https://github.com/mdecourse/Brython-ML">https://github.com/mdecourse/Brython-ML</a> </p>
<h1>Math</h1>
<p><a href="https://open.umn.edu/opentextbooks/textbooks/precalculus-an-investigation-of-functions">https://open.umn.edu/opentextbooks/textbooks/precalculus-an-investigation-of-functions</a></p>
<h1>Final Project</h1>
<p>Final Project 佔學期成績 30%</p>
<p><span style="background-color: #ffff99;">Final Project 必須在 2022.01.05 22:00 之前完成</span>.</p>
<p><a href="https://github.com/mdecourse/cp2021/discussions/11">Final Project 具體項目成果回報區</a>將於 2021.11.09 開啟, 於 <span style="background-color: #ff99cc;">2022.01.05 22:00 關閉</span></p>
<p>利用 Brython 寫一個會<span style="background-color: #ffff99;">令人想玩</span>的網際遊戲.</p>
<h4>參考章節:</h4>
<ol>
<li><a href="https://www.enago.tw/academy/%E5%A6%82%E4%BD%95%E6%92%B0%E5%AF%AB%E6%91%98%E8%A6%81%EF%BC%9F/">專題摘要</a></li>
<li><a href="https://ctld.ntu.edu.tw/ls/strategy/lecture.php?index=126">資料蒐集</a></li>
<li><a href="http://old.gst.org.tw/WPES/guideline_D-a.htm">設計動機</a></li>
<li><a href="https://wordvice.com.tw/%E5%A6%82%E4%BD%95%E5%AF%AB%E5%A5%BD%E8%AB%96%E6%96%87%E4%B8%AD%E7%9A%84%E3%80%8C%E7%A0%94%E7%A9%B6%E6%96%B9%E6%B3%95%E3%80%8D/">設計方法</a></li>
<li><a href="http://microbiology.scu.edu.tw/MIB/wong/courses/writing/result02.htm">結果與討論</a></li>
<li><a href="https://www.enago.tw/academy/what-you-need-to-know-about-the-manuscript-appendix/">附錄</a></li>
</ol>
<h4>參考資料:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/collections/web-games">https://github.com/collections/web-games</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/topics/web-game">https://github.com/topics/web-game</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/topics/browser-game">https://github.com/topics/browser-game</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/leereilly/games">https://github.com/leereilly/games</a></p>
<p style="padding-left: 30px;"><a href="https://bmsleight.github.io/brython-blocks/">https://bmsleight.github.io/brython-blocks/</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/brython-blocks">https://github.com/mdecourse/brython-blocks</a></p>
<h1>EXAM</h1>
<h2>W13</h2>
<p>第一種在網頁執行 Brython 程式的方法, 是使用者在網際程式編輯區輸入 Brython 程式碼, 必須手動按下 Run 才能執行.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/Tzm0306/013fe11d356570ea7de8417188252d9a/raw/9498973bd3bb266299d76ed5c239ff8d1389f3b2/W13"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    #Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<p></p>
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 執行與清除按鈕結束 -->
<p></p>
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 -->
<div id="brython_div"></div>
<!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>